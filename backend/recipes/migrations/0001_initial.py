<<<<<<< HEAD
# Generated by Django 3.2.19 on 2024-08-11 12:56

import re

import django.core.validators
=======
# Generated by Django 3.2.19 on 2024-09-16 20:20

>>>>>>> work
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
<<<<<<< HEAD
            name='FavoritesList',
=======
            name='Favorite',
>>>>>>> work
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
<<<<<<< HEAD
                'verbose_name': 'Список избранных рецептов',
                'verbose_name_plural': 'Списки избранных рецептов',
=======
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
>>>>>>> work
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('name', models.CharField(max_length=200, verbose_name='Название ингредиента')),
                ('measurement_unit', models.CharField(max_length=200, verbose_name='Единицы измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
=======
                ('name', models.CharField(max_length=128, verbose_name='название')),
                ('measurement_unit', models.CharField(max_length=64)),
            ],
            options={
                'verbose_name': ('Ингридиент',),
                'verbose_name_plural': 'Ингридиенты',
>>>>>>> work
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('name', models.CharField(help_text='Введите название рецепта', max_length=200, verbose_name='Название рецепта')),
                ('text', models.TextField(help_text='Введите описание рецепта', verbose_name='Описание рецепта')),
                ('image', models.ImageField(help_text='Прикрепите изображение', upload_to='recipes/', verbose_name='Изображение')),
                ('cooking_time', models.PositiveSmallIntegerField(help_text='Время приготовления в минутах', validators=[django.core.validators.MinValueValidator(1, 'Время приготовления должно быть больше 1')], verbose_name='Время приготовления')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-pub_date',),
=======
                ('name', models.CharField(max_length=256, verbose_name='название')),
                ('image', models.ImageField(upload_to='recipes/')),
                ('text', models.CharField(max_length=256)),
                ('cooking_time', models.IntegerField()),
            ],
            options={
                'verbose_name': ('Рецепте',),
                'verbose_name_plural': 'Рецепты',
>>>>>>> work
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(verbose_name='Количество')),
            ],
            options={
                'verbose_name': ('Ингредиент в рецепте',),
<<<<<<< HEAD
                'verbose_name_plural': 'Ингредиенты в рецепте',
=======
                'verbose_name_plural': 'Ингредиент в рецепте',
>>>>>>> work
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
<<<<<<< HEAD
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название тэга')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')], verbose_name='Слаг тэга')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_list', to='recipes.recipe', verbose_name='Рецепт из списка покупок')),
=======
                ('name', models.CharField(max_length=64, verbose_name='название')),
                ('slug', models.CharField(max_length=64, unique=True)),
            ],
            options={
                'verbose_name': ('Тэг',),
                'verbose_name_plural': 'Тэг',
            },
        ),
        migrations.CreateModel(
            name='ShoppingСart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='recipes.recipe')),
>>>>>>> work
            ],
            options={
                'verbose_name': 'Список покупок',
                'verbose_name_plural': 'Списки покупок',
            },
        ),
    ]
